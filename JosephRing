1 2 3 ... n  (第m个人出列，m可能大于n，所以出列号数为 m%n，当m=n时，m%n=0，但是实际应出第n个，因此从0开始编号更方便)
0 1 2 ... n-1 (此时设m=5,则就是出编号为m-1%n即4%n的数)

在编号为 0 1 2 ... n-1 中，假设出的数为编号k=(m-1)%n，则下一个数k1=m%n，对这些数字从0开始编号，对应关系为
原编号:              k1  k1+1  k1+2  k1+3  ...   (k1+n-2)%n
从k1为0开始的新编号:  0   1     2     3    ...    n-2

有n个人时，每数到m的人出列的结果 与 有n-1个人时，每数到m的人出列的结果（第一次编码中）一定是同一个人.
所以当知道这个人在只剩下n-1人后从0开始的新编号（设为x）时，就可以推导出第一次的编号 = (x + k) % n  其中k = m%n (k和n都是有n人时的量，只有x为n-1人时的新编号) 
(x + m%n)%n = (x+m)%n 

int s,m,n = 0;
std::cin >> m >> n;
for (int i = 2;i < n+1;++i) {
	s = (s + m) % i;
}
std::cout << s;

